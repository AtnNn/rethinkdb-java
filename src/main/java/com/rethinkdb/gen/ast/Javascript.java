// Autogenerated by metajava.py.
// Do not edit this file directly.
// The template for this file is located at:
// ../../../../../../../../templates/ast/Javascript.java

package com.rethinkdb.gen.ast;

import com.rethinkdb.gen.proto.TermType;
import com.rethinkdb.gen.exc.ReqlDriverError;
import com.rethinkdb.model.Arguments;
import com.rethinkdb.model.OptArgs;
import com.rethinkdb.ast.ReqlAst;



public class Javascript extends ReqlExpr implements ReqlFunction0, ReqlFunction1, ReqlFunction2{


    public Javascript(Object arg) {
        this(new Arguments(arg), null);
    }
    public Javascript(Arguments args){
        this(args, null);
    }
    public Javascript(Arguments args, OptArgs optargs) {
        this(TermType.JAVASCRIPT, args, optargs);
    }
    protected Javascript(TermType termType, Arguments args, OptArgs optargs){
        super(termType, args, optargs);
    }
public Javascript optArg(String optname, Object value) {
    OptArgs newOptargs = OptArgs.fromMap(optargs).with(optname, value);
    return new Javascript(args, newOptargs);
}


    @Override
    public Object apply() {
       // This is only to satisfy the ReqlFunction0 interface. toReqlAst
       // will accept the Javascript term itself, it won't try to use
       // function application on the term.
       throw new ReqlDriverError("Apply should not be invoked.");
    }
    @Override
    public Object apply(ReqlExpr arg1) {
       throw new ReqlDriverError("Apply should not be invoked");
    }
    @Override
    public Object apply(ReqlExpr arg1, ReqlExpr arg2) {
       throw new ReqlDriverError("Apply should not be invoked");
    }
}
